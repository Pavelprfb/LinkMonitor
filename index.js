import express from "express";
import axios from "axios";
import cron from "node-cron";
import fs from "fs";
import path from "path";

const app = express();
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// HTML ржлрж╛ржЗрж▓ рж╕рж╛рж░рзНржн ржХрж░рж╛рж░ ржЬржирзНржп
app.use(express.static(path.join(process.cwd(), "public")));

let links = JSON.parse(fs.readFileSync("links.json"));

// рж▓рж┐ржЩрзНржХ ржпрзЛржЧ ржХрж░рж╛рж░ API
app.post("/add", (req, res) => {
    const { url } = req.body;
    if (!url) return res.send("тЭМ URL ржжрж┐ржи");
    if (!links.includes(url)) {
        links.push(url);
        fs.writeFileSync("links.json", JSON.stringify(links, null, 2));
        return res.send("тЬЕ рж▓рж┐ржЩрзНржХ ржпрзЛржЧ рж╣ржпрж╝рзЗржЫрзЗ");
    }
    res.send("тЪая╕П ржПржЗ рж▓рж┐ржЩрзНржХ ржЖржЧрзЗ ржерзЗржХрзЗржЗ ржЖржЫрзЗ");
});

// рж╕ржм рж▓рж┐ржЩрзНржХ ржжрзЗржЦрж╛рж░ API
app.get("/links", (req, res) => {
    res.json(links);
});

// рж▓рж┐ржЩрзНржХ ржорзБржЫрзЗ ржлрзЗрж▓рж╛рж░ API
app.post("/remove", (req, res) => {
    const { url } = req.body;
    links = links.filter(link => link !== url);
    fs.writeFileSync("links.json", JSON.stringify(links, null, 2));
    res.send("ЁЯЧСя╕П рж▓рж┐ржЩрзНржХ ржорзБржЫрзЗ ржлрзЗрж▓рж╛ рж╣ржпрж╝рзЗржЫрзЗ");
});

// ржкрзНрж░рждрж┐ рзл ржорж┐ржирж┐ржЯрзЗ ржкрж┐ржВ рж╕рж┐рж╕рзНржЯрзЗржо
cron.schedule("*/5 * * * *", async () => {
    console.log("тП│ ржкрж┐ржВ рж╢рзБрж░рзБ рж╣ржЪрзНржЫрзЗ...");
    for (let link of links) {
        try {
            await axios.get(link);
            console.log(`тЬЕ ржкрж┐ржВ рж╕ржлрж▓: ${link}`);
        } catch (err) {
            console.log(`тЭМ ржкрж┐ржВ ржмрзНржпрж░рзНрже: ${link}`);
        }
    }
});

app.listen(3000, () => {
    console.log("ЁЯЪА рж╕рж╛рж░рзНржнрж╛рж░ ржЪрж╛рж▓рзБ: http://localhost:3000");
});